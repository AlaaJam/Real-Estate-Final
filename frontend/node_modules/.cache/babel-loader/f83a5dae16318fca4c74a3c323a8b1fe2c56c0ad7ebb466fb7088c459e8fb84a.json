{"ast":null,"code":"// src/helpers/api.js\nconst DEV_BASE = \"http://localhost:7542\";\nconst ENV_BASE = (process.env.REACT_APP_API_URL || process.env.REACT_APP_API_BASE || DEV_BASE).replace(/\\/$/, \"\");\nexport async function api(path, init = {}) {\n  let url = path;\n  if (!/^https?:\\/\\//i.test(path)) {\n    const p = path.replace(/^\\/+/, \"\"); // strip leading slashes\n    // If caller already starts with \"api/\", don't add it again\n    url = p.startsWith(\"api/\") ? `${ENV_BASE}/${p}` : `${ENV_BASE}/api/${p}`;\n  }\n  const res = await fetch(url, {\n    method: \"GET\",\n    credentials: \"omit\",\n    headers: {\n      Accept: \"application/json\",\n      ...(init.headers || {})\n    },\n    ...init\n  });\n  if (!res.ok) {\n    const txt = await res.text().catch(() => \"\");\n    throw new Error(`HTTP ${res.status}${txt ? ` - ${txt}` : \"\"}`);\n  }\n  return res.json();\n}","map":{"version":3,"names":["DEV_BASE","ENV_BASE","process","env","REACT_APP_API_URL","REACT_APP_API_BASE","replace","api","path","init","url","test","p","startsWith","res","fetch","method","credentials","headers","Accept","ok","txt","text","catch","Error","status","json"],"sources":["C:/Users/PC 26/Desktop/final-final/Real-Estate-Website-main-main/frontend/src/helpers/api.js"],"sourcesContent":["// src/helpers/api.js\nconst DEV_BASE = \"http://localhost:7542\";\nconst ENV_BASE = (process.env.REACT_APP_API_URL || process.env.REACT_APP_API_BASE || DEV_BASE).replace(/\\/$/, \"\");\n\nexport async function api(path, init = {}) {\n  let url = path;\n\n  if (!/^https?:\\/\\//i.test(path)) {\n    const p = path.replace(/^\\/+/, \"\"); // strip leading slashes\n    // If caller already starts with \"api/\", don't add it again\n    url = p.startsWith(\"api/\") ? `${ENV_BASE}/${p}` : `${ENV_BASE}/api/${p}`;\n  }\n\n  const res = await fetch(url, {\n    method: \"GET\",\n    credentials: \"omit\",\n    headers: { Accept: \"application/json\", ...(init.headers || {}) },\n    ...init,\n  });\n\n  if (!res.ok) {\n    const txt = await res.text().catch(() => \"\");\n    throw new Error(`HTTP ${res.status}${txt ? ` - ${txt}` : \"\"}`);\n  }\n  return res.json();\n}\n"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAG,uBAAuB;AACxC,MAAMC,QAAQ,GAAG,CAACC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAIF,OAAO,CAACC,GAAG,CAACE,kBAAkB,IAAIL,QAAQ,EAAEM,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;AAEjH,OAAO,eAAeC,GAAGA,CAACC,IAAI,EAAEC,IAAI,GAAG,CAAC,CAAC,EAAE;EACzC,IAAIC,GAAG,GAAGF,IAAI;EAEd,IAAI,CAAC,eAAe,CAACG,IAAI,CAACH,IAAI,CAAC,EAAE;IAC/B,MAAMI,CAAC,GAAGJ,IAAI,CAACF,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,CAAC;IACpC;IACAI,GAAG,GAAGE,CAAC,CAACC,UAAU,CAAC,MAAM,CAAC,GAAG,GAAGZ,QAAQ,IAAIW,CAAC,EAAE,GAAG,GAAGX,QAAQ,QAAQW,CAAC,EAAE;EAC1E;EAEA,MAAME,GAAG,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAE;IAC3BM,MAAM,EAAE,KAAK;IACbC,WAAW,EAAE,MAAM;IACnBC,OAAO,EAAE;MAAEC,MAAM,EAAE,kBAAkB;MAAE,IAAIV,IAAI,CAACS,OAAO,IAAI,CAAC,CAAC;IAAE,CAAC;IAChE,GAAGT;EACL,CAAC,CAAC;EAEF,IAAI,CAACK,GAAG,CAACM,EAAE,EAAE;IACX,MAAMC,GAAG,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM,EAAE,CAAC;IAC5C,MAAM,IAAIC,KAAK,CAAC,QAAQV,GAAG,CAACW,MAAM,GAAGJ,GAAG,GAAG,MAAMA,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;EAChE;EACA,OAAOP,GAAG,CAACY,IAAI,CAAC,CAAC;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}