{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n\n// import { Inbox, Form } from \"../components\";\n\n// import { useSelector, useDispatch } from \"react-redux\";\n\n// import { getMessages, deleteMessage } from \"../redux/actions/messagesAction\";\n\n// const MessagesContainer = () => {\n//   const dispatch = useDispatch();\n\n//   const { messages } = useSelector((state) => state.messageList);\n\n//   useEffect(() => {\n//     dispatch(getMessages());\n//   }, [dispatch]);\n//   return (\n//     <Inbox>\n//       {messages.map((message) => (\n//         <InboxItem key={message.id} message={message} />\n//       ))}\n//     </Inbox>\n//   );\n// };\n\n// const InboxItem = ({ message }) => {\n//   const [bodyShown, setBodyShown] = useState(false);\n\n//   const dispatch = useDispatch();\n\n//   const [replyShown, setReplyShown] = useState(false);\n\n//   const handleBodyShown = () => setBodyShown((prevState) => !prevState);\n\n//   const handleReplyShown = () => setReplyShown(true);\n\n//   const handleReplyHide = () => setReplyShown(false);\n\n//   const handleMessageDelete = (id) => {\n//     setBodyShown(false);\n//     dispatch(deleteMessage(id));\n//   };\n\n//   return (\n//     <Inbox.Item>\n//       <Inbox.ItemHeader>\n//         <Inbox.Text onClick={handleBodyShown}>{message.from}</Inbox.Text>\n//         <Inbox.Text onClick={handleBodyShown}>{message.title}</Inbox.Text>\n//         <Inbox.HeaderAction>\n//           <Inbox.Icon\n//             onClick={() => handleMessageDelete(message.id)}\n//             name=\"fas fa-trash\"\n//           />\n//           <Inbox.Icon\n//             onClick={handleBodyShown}\n//             name={bodyShown ? \"fas fa-envelope\" : \"fas fa-envelope-open\"}\n//             role=\"open-close\"\n//           />\n//           <Inbox.Span>Feb 19</Inbox.Span>\n//         </Inbox.HeaderAction>\n//       </Inbox.ItemHeader>\n//       {bodyShown && (\n//         <Inbox.ItemBody>\n//           <Inbox.BodyContainer>\n//             <Inbox.BodyTitle>\n//               <Inbox.Title>{message.title}</Inbox.Title>\n//               <Inbox.Text>\n//                 <Inbox.Span special=\"true\">{message.from.charAt(0)}</Inbox.Span>\n//                 <Inbox.Span>{message.from}</Inbox.Span>\n//                 {\" ,\"}\n//                 <Inbox.Span>\n//                   Lorem ipsum dolor sit amet consectetur adipisicing elit.\n//                 </Inbox.Span>\n//               </Inbox.Text>\n//             </Inbox.BodyTitle>\n//             <Inbox.BodyContent>\n//               <Inbox.Text>{message.body}</Inbox.Text>\n//             </Inbox.BodyContent>\n//             <Inbox.BodyFooter>\n//               <Inbox.FooterTitle>\n//                 <Inbox.Button\n//                   role=\"reply\"\n//                   onClick={() => handleReplyShown(message.id)}>\n//                   <Inbox.Icon name=\"fas fa-reply \" />\n//                   Reply\n//                 </Inbox.Button>\n//                 <Inbox.Button\n//                   role=\"delete\"\n//                   onClick={() => handleMessageDelete(message.id)}>\n//                   <Inbox.Icon name=\"fas fa-trash\" />\n//                   Delete\n//                 </Inbox.Button>\n//               </Inbox.FooterTitle>\n//               {replyShown && (\n//                 <Inbox.FooterContent>\n//                   <Form>\n//                     <Form.FormGroup>\n//                       <Form.Label>Reply to</Form.Label>\n//                       <Form.Input value={message.emailFrom} />\n//                     </Form.FormGroup>\n//                     <Form.FormGroup>\n//                       <Form.Input placeholder=\"Reply title\" />\n//                     </Form.FormGroup>\n//                     <Form.FormGroup>\n//                       <Form.TextArea\n//                         placeholder=\"Reply message\"\n//                         name=\"\"\n//                         id=\"\"\n//                         cols=\"30\"\n//                         rows=\"10\"></Form.TextArea>\n//                     </Form.FormGroup>\n//                     <Inbox.Flex>\n//                       <Form.FormGroup>\n//                         <Form.SubmitInput value=\"Send Reply\" />\n//                         <Inbox.Button role=\"cancel\" onClick={handleReplyHide}>\n//                           Cancel\n//                         </Inbox.Button>\n//                       </Form.FormGroup>\n//                     </Inbox.Flex>\n//                   </Form>\n//                 </Inbox.FooterContent>\n//               )}\n//             </Inbox.BodyFooter>\n//           </Inbox.BodyContainer>\n//         </Inbox.ItemBody>\n//       )}\n//     </Inbox.Item>\n//   );\n// };\n\n// export default MessagesContainer;","map":{"version":3,"names":[],"sources":["C:/Users/PC 26/Desktop/final-final/Real-Estate-Website-main-main/frontend/src/containers/MessagesContainer.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\n\n// import { Inbox, Form } from \"../components\";\n\n// import { useSelector, useDispatch } from \"react-redux\";\n\n// import { getMessages, deleteMessage } from \"../redux/actions/messagesAction\";\n\n// const MessagesContainer = () => {\n//   const dispatch = useDispatch();\n\n//   const { messages } = useSelector((state) => state.messageList);\n\n//   useEffect(() => {\n//     dispatch(getMessages());\n//   }, [dispatch]);\n//   return (\n//     <Inbox>\n//       {messages.map((message) => (\n//         <InboxItem key={message.id} message={message} />\n//       ))}\n//     </Inbox>\n//   );\n// };\n\n// const InboxItem = ({ message }) => {\n//   const [bodyShown, setBodyShown] = useState(false);\n\n//   const dispatch = useDispatch();\n\n//   const [replyShown, setReplyShown] = useState(false);\n\n//   const handleBodyShown = () => setBodyShown((prevState) => !prevState);\n\n//   const handleReplyShown = () => setReplyShown(true);\n\n//   const handleReplyHide = () => setReplyShown(false);\n\n//   const handleMessageDelete = (id) => {\n//     setBodyShown(false);\n//     dispatch(deleteMessage(id));\n//   };\n\n//   return (\n//     <Inbox.Item>\n//       <Inbox.ItemHeader>\n//         <Inbox.Text onClick={handleBodyShown}>{message.from}</Inbox.Text>\n//         <Inbox.Text onClick={handleBodyShown}>{message.title}</Inbox.Text>\n//         <Inbox.HeaderAction>\n//           <Inbox.Icon\n//             onClick={() => handleMessageDelete(message.id)}\n//             name=\"fas fa-trash\"\n//           />\n//           <Inbox.Icon\n//             onClick={handleBodyShown}\n//             name={bodyShown ? \"fas fa-envelope\" : \"fas fa-envelope-open\"}\n//             role=\"open-close\"\n//           />\n//           <Inbox.Span>Feb 19</Inbox.Span>\n//         </Inbox.HeaderAction>\n//       </Inbox.ItemHeader>\n//       {bodyShown && (\n//         <Inbox.ItemBody>\n//           <Inbox.BodyContainer>\n//             <Inbox.BodyTitle>\n//               <Inbox.Title>{message.title}</Inbox.Title>\n//               <Inbox.Text>\n//                 <Inbox.Span special=\"true\">{message.from.charAt(0)}</Inbox.Span>\n//                 <Inbox.Span>{message.from}</Inbox.Span>\n//                 {\" ,\"}\n//                 <Inbox.Span>\n//                   Lorem ipsum dolor sit amet consectetur adipisicing elit.\n//                 </Inbox.Span>\n//               </Inbox.Text>\n//             </Inbox.BodyTitle>\n//             <Inbox.BodyContent>\n//               <Inbox.Text>{message.body}</Inbox.Text>\n//             </Inbox.BodyContent>\n//             <Inbox.BodyFooter>\n//               <Inbox.FooterTitle>\n//                 <Inbox.Button\n//                   role=\"reply\"\n//                   onClick={() => handleReplyShown(message.id)}>\n//                   <Inbox.Icon name=\"fas fa-reply \" />\n//                   Reply\n//                 </Inbox.Button>\n//                 <Inbox.Button\n//                   role=\"delete\"\n//                   onClick={() => handleMessageDelete(message.id)}>\n//                   <Inbox.Icon name=\"fas fa-trash\" />\n//                   Delete\n//                 </Inbox.Button>\n//               </Inbox.FooterTitle>\n//               {replyShown && (\n//                 <Inbox.FooterContent>\n//                   <Form>\n//                     <Form.FormGroup>\n//                       <Form.Label>Reply to</Form.Label>\n//                       <Form.Input value={message.emailFrom} />\n//                     </Form.FormGroup>\n//                     <Form.FormGroup>\n//                       <Form.Input placeholder=\"Reply title\" />\n//                     </Form.FormGroup>\n//                     <Form.FormGroup>\n//                       <Form.TextArea\n//                         placeholder=\"Reply message\"\n//                         name=\"\"\n//                         id=\"\"\n//                         cols=\"30\"\n//                         rows=\"10\"></Form.TextArea>\n//                     </Form.FormGroup>\n//                     <Inbox.Flex>\n//                       <Form.FormGroup>\n//                         <Form.SubmitInput value=\"Send Reply\" />\n//                         <Inbox.Button role=\"cancel\" onClick={handleReplyHide}>\n//                           Cancel\n//                         </Inbox.Button>\n//                       </Form.FormGroup>\n//                     </Inbox.Flex>\n//                   </Form>\n//                 </Inbox.FooterContent>\n//               )}\n//             </Inbox.BodyFooter>\n//           </Inbox.BodyContainer>\n//         </Inbox.ItemBody>\n//       )}\n//     </Inbox.Item>\n//   );\n// };\n\n// export default MessagesContainer;\n"],"mappings":"AAAA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}