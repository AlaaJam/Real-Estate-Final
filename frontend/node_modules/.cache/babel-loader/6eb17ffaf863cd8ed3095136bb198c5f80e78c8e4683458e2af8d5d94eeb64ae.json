{"ast":null,"code":"const defaultBase = typeof window !== \"undefined\" && window.location.port === \"3000\" ? \"http://localhost:7542\" : \"\";\nconst API_BASE = (process.env.REACT_APP_API_URL || defaultBase).replace(/\\/$/, \"\");\nexport async function api(path, opts = {}) {\n  const url = API_BASE ? `${API_BASE}${path}` : path;\n  const init = {\n    method: \"GET\",\n    credentials: \"include\",\n    ...opts\n  };\n\n  // only set JSON header when not sending FormData\n  if (!(init.body instanceof FormData)) {\n    init.headers = {\n      \"Content-Type\": \"application/json\",\n      ...(opts.headers || {})\n    };\n    if (init.body && typeof init.body !== \"string\") {\n      init.body = JSON.stringify(init.body);\n    }\n  }\n  const res = await fetch(url, init);\n  const text = await res.text();\n  if (!res.ok) throw new Error(`HTTP ${res.status} - ${text}`);\n  try {\n    return JSON.parse(text);\n  } catch {\n    return text;\n  }\n}","map":{"version":3,"names":["defaultBase","window","location","port","API_BASE","process","env","REACT_APP_API_URL","replace","api","path","opts","url","init","method","credentials","body","FormData","headers","JSON","stringify","res","fetch","text","ok","Error","status","parse"],"sources":["C:/Users/PC 26/Desktop/final-final/Real-Estate-Website-main-main/frontend/src/helpers/api.js"],"sourcesContent":["const defaultBase = (typeof window !== \"undefined\" && window.location.port === \"3000\")\n  ? \"http://localhost:7542\"\n  : \"\";\n\nconst API_BASE = (process.env.REACT_APP_API_URL || defaultBase).replace(/\\/$/, \"\");\n\nexport async function api(path, opts = {}) {\n  const url = API_BASE ? `${API_BASE}${path}` : path;\n\n  const init = {\n    method: \"GET\",\n    credentials: \"include\",\n    ...opts,\n  };\n\n  // only set JSON header when not sending FormData\n  if (!(init.body instanceof FormData)) {\n    init.headers = { \"Content-Type\": \"application/json\", ...(opts.headers || {}) };\n    if (init.body && typeof init.body !== \"string\") {\n      init.body = JSON.stringify(init.body);\n    }\n  }\n\n  const res = await fetch(url, init);\n  const text = await res.text();\n  if (!res.ok) throw new Error(`HTTP ${res.status} - ${text}`);\n\n  try { return JSON.parse(text); } catch { return text; }\n}\n"],"mappings":"AAAA,MAAMA,WAAW,GAAI,OAAOC,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACC,QAAQ,CAACC,IAAI,KAAK,MAAM,GACjF,uBAAuB,GACvB,EAAE;AAEN,MAAMC,QAAQ,GAAG,CAACC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAIP,WAAW,EAAEQ,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;AAElF,OAAO,eAAeC,GAAGA,CAACC,IAAI,EAAEC,IAAI,GAAG,CAAC,CAAC,EAAE;EACzC,MAAMC,GAAG,GAAGR,QAAQ,GAAG,GAAGA,QAAQ,GAAGM,IAAI,EAAE,GAAGA,IAAI;EAElD,MAAMG,IAAI,GAAG;IACXC,MAAM,EAAE,KAAK;IACbC,WAAW,EAAE,SAAS;IACtB,GAAGJ;EACL,CAAC;;EAED;EACA,IAAI,EAAEE,IAAI,CAACG,IAAI,YAAYC,QAAQ,CAAC,EAAE;IACpCJ,IAAI,CAACK,OAAO,GAAG;MAAE,cAAc,EAAE,kBAAkB;MAAE,IAAIP,IAAI,CAACO,OAAO,IAAI,CAAC,CAAC;IAAE,CAAC;IAC9E,IAAIL,IAAI,CAACG,IAAI,IAAI,OAAOH,IAAI,CAACG,IAAI,KAAK,QAAQ,EAAE;MAC9CH,IAAI,CAACG,IAAI,GAAGG,IAAI,CAACC,SAAS,CAACP,IAAI,CAACG,IAAI,CAAC;IACvC;EACF;EAEA,MAAMK,GAAG,GAAG,MAAMC,KAAK,CAACV,GAAG,EAAEC,IAAI,CAAC;EAClC,MAAMU,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAI,CAAC,CAAC;EAC7B,IAAI,CAACF,GAAG,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,QAAQJ,GAAG,CAACK,MAAM,MAAMH,IAAI,EAAE,CAAC;EAE5D,IAAI;IAAE,OAAOJ,IAAI,CAACQ,KAAK,CAACJ,IAAI,CAAC;EAAE,CAAC,CAAC,MAAM;IAAE,OAAOA,IAAI;EAAE;AACxD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}